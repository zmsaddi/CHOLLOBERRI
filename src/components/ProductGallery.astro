---
export interface Props {
  images: string[];
  productName: string;
}

const { images, productName } = Astro.props;
---

<div class="product-gallery">
  <div class="main-image-container">
    <img 
      id="main-image" 
      src={images[0]} 
      alt={productName}
      class="main-image"
    />
  </div>
  
  {images.length > 1 && (
    <div class="thumbnail-container">
      <div class="thumbnails">
        {images.map((image, index) => (
          <button 
            class={`thumbnail ${index === 0 ? 'active' : ''}`}
            data-image={image}
            data-index={index}
          >
            <img src={image} alt={`${productName} - Vista ${index + 1}`} />
          </button>
        ))}
      </div>
    </div>
  )}
</div>

<style>
  .product-gallery {
    display: flex;
    flex-direction: column;
    gap: 16px;
  }
  
  .main-image-container {
    position: relative;
    border-radius: 16px;
    overflow: hidden;
    background: #f9fafb;
    aspect-ratio: 1;
  }
  
  .main-image {
    width: 100%;
    height: 400px;
    object-fit: contain;
    object-position: center;
    border-radius: 12px;
    background: #f8f9fa;
    padding: 20px;
    box-sizing: border-box;
  }
  
  .main-image:hover {
    transform: scale(1.05);
  }
  
  .thumbnail-container {
    width: 100%;
  }
  
  .thumbnails {
    display: flex;
    gap: 12px;
    overflow-x: auto;
    padding: 4px;
    scrollbar-width: thin;
    scrollbar-color: #d1d5db #f9fafb;
  }
  
  .thumbnails::-webkit-scrollbar {
    height: 6px;
  }
  
  .thumbnails::-webkit-scrollbar-track {
    background: #f9fafb;
    border-radius: 3px;
  }
  
  .thumbnails::-webkit-scrollbar-thumb {
    background: #d1d5db;
    border-radius: 3px;
  }
  
  .thumbnails::-webkit-scrollbar-thumb:hover {
    background: #9ca3af;
  }
  
  .thumbnail {
    flex-shrink: 0;
    width: 80px;
    height: 80px;
    border: 2px solid transparent;
    border-radius: 12px;
    overflow: hidden;
    background: #f8f9fa;
    cursor: pointer;
    transition: all 0.3s ease;
    padding: 8px;
    box-sizing: border-box;
  }
  
  .thumbnail img {
    width: 100%;
    height: 100%;
    object-fit: contain;
    object-position: center;
  }
  
  .thumbnail:hover {
    border-color: #10b981;
    transform: translateY(-2px);
  }
  
  .thumbnail.active {
    border-color: #10b981;
    box-shadow: 0 4px 12px rgba(16, 185, 129, 0.3);
  }
  
  .thumbnail img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  
  @media (max-width: 768px) {
    .thumbnail {
      width: 60px;
      height: 60px;
    }
    
    .thumbnails {
      gap: 8px;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const mainImage = document.getElementById('main-image');
    const thumbnails = document.querySelectorAll('.thumbnail');
    
    thumbnails.forEach(thumbnail => {
      thumbnail.addEventListener('click', function() {
        const newImageSrc = this.dataset.image;
        
        if (mainImage && newImageSrc) {
          // Update main image
          mainImage.src = newImageSrc;
          
          // Update active thumbnail
          thumbnails.forEach(t => t.classList.remove('active'));
          this.classList.add('active');
        }
      });
    });
  });
</script>

