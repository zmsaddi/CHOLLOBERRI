---
export interface Props {
  lang: string;
  currentPath: string;
}

const { lang, currentPath } = Astro.props;

const languages = [
  { code: 'es', name: 'EspaÃ±ol', flag: 'ðŸ‡ªðŸ‡¸' },
  { code: 'eu', name: 'Euskera', flag: 'ðŸŸ âšªðŸŸ¢' },
  { code: 'fr', name: 'FranÃ§ais', flag: 'ðŸ‡«ðŸ‡·' },
  { code: 'en', name: 'English', flag: 'ðŸ‡¬ðŸ‡§' },
  { code: 'nl', name: 'Nederlands', flag: 'ðŸ‡³ðŸ‡±' },
  { code: 'de', name: 'Deutsch', flag: 'ðŸ‡©ðŸ‡ª' }
];

function getLocalizedPath(targetLang: string, currentPath: string) {
  // Remove current language prefix and add new one
  const pathWithoutLang = currentPath.replace(/^\/[a-z]{2}\//, '/');
  return `/${targetLang}${pathWithoutLang === '/' ? '/' : pathWithoutLang}`;
}

const currentLanguage = languages.find(l => l.code === lang) || languages[0];
---

<div class="language-switcher">
  <button class="lang-button" id="lang-button">
    <span class="flag">{currentLanguage.flag}</span>
    <span class="lang-name">{currentLanguage.name}</span>
    <svg class="chevron" width="16" height="16" viewBox="0 0 16 16" fill="none">
      <path d="M4 6L8 10L12 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
    </svg>
  </button>
  
  <div class="lang-dropdown" id="lang-dropdown">
    {languages.map(language => (
      <a 
        href={getLocalizedPath(language.code, currentPath)}
        class={`lang-option ${language.code === lang ? 'active' : ''}`}
      >
        <span class="flag">{language.flag}</span>
        <span class="lang-name">{language.name}</span>
      </a>
    ))}
  </div>
</div>

<style>
  .language-switcher {
    position: relative;
  }
  
  .lang-button {
    display: flex;
    align-items: center;
    gap: 8px;
    padding: 8px 12px;
    background: white;
    border: 1px solid #d1d5db;
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.3s ease;
    font-size: 14px;
  }
  
  .lang-button:hover {
    border-color: #10b981;
    box-shadow: 0 2px 4px rgba(16, 185, 129, 0.1);
  }
  
  .flag {
    font-size: 16px;
  }
  
  .lang-name {
    font-weight: 500;
    color: #374151;
  }
  
  .chevron {
    transition: transform 0.3s ease;
    color: #6b7280;
  }
  
  .lang-button.active .chevron {
    transform: rotate(180deg);
  }
  
  .lang-dropdown {
    position: absolute;
    top: 100%;
    right: 0;
    background: white;
    border: 1px solid #d1d5db;
    border-radius: 8px;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
    opacity: 0;
    visibility: hidden;
    transform: translateY(-10px);
    transition: all 0.3s ease;
    min-width: 160px;
    z-index: 1000;
  }
  
  .lang-dropdown.active {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
  }
  
  .lang-option {
    display: flex;
    align-items: center;
    gap: 8px;
    padding: 12px 16px;
    text-decoration: none;
    color: #374151;
    transition: background-color 0.3s ease;
    font-size: 14px;
  }
  
  .lang-option:hover {
    background-color: #f9fafb;
  }
  
  .lang-option.active {
    background-color: #ecfdf5;
    color: #10b981;
    font-weight: 500;
  }
  
  .lang-option:first-child {
    border-radius: 8px 8px 0 0;
  }
  
  .lang-option:last-child {
    border-radius: 0 0 8px 8px;
  }
  
  @media (max-width: 768px) {
    .lang-dropdown {
      right: auto;
      left: 0;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const langButton = document.getElementById('lang-button');
    const langDropdown = document.getElementById('lang-dropdown');
    
    if (langButton && langDropdown) {
      langButton.addEventListener('click', function(e) {
        e.stopPropagation();
        langDropdown.classList.toggle('active');
        langButton.classList.toggle('active');
      });
      
      // Close dropdown when clicking outside
      document.addEventListener('click', function() {
        langDropdown.classList.remove('active');
        langButton.classList.remove('active');
      });
      
      // Prevent dropdown from closing when clicking inside
      langDropdown.addEventListener('click', function(e) {
        e.stopPropagation();
      });
    }
  });
</script>

