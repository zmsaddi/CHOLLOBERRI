---
export interface Props {
  lang: string;
}

const { lang } = Astro.props;

const categories = [
  { id: 'all', name: { es: 'Todos', eu: 'Denak', fr: 'Tous', en: 'All', nl: 'Alle', de: 'Alle' } },
  { id: 'bike', name: { es: 'Bicicletas', eu: 'Bizikletak', fr: 'Vélos', en: 'Bikes', nl: 'Fietsen', de: 'Fahrräder' } },
  { id: 'scooter', name: { es: 'Patinetes', eu: 'Patinete', fr: 'Trottinettes', en: 'Scooters', nl: 'Steps', de: 'Roller' } },
  { id: 'cargo', name: { es: 'Carga', eu: 'Karga', fr: 'Cargo', en: 'Cargo', nl: 'Cargo', de: 'Cargo' } },
  { id: 'skateboard', name: { es: 'Skateboards', eu: 'Skateboard', fr: 'Skateboards', en: 'Skateboards', nl: 'Skateboards', de: 'Skateboards' } }
];
---

<div class="product-filter">
  <div class="filter-header">
    <h3 class="filter-title">
      {lang === 'es' && 'Filtrar por categoría'}
      {lang === 'eu' && 'Kategoriaren arabera iragazi'}
      {lang === 'fr' && 'Filtrer par catégorie'}
      {lang === 'en' && 'Filter by category'}
      {lang === 'nl' && 'Filter op categorie'}
      {lang === 'de' && 'Nach Kategorie filtern'}
    </h3>
  </div>
  
  <div class="filter-buttons">
    {categories.map(category => (
      <button 
        class="filter-btn" 
        data-category={category.id}
        data-active={category.id === 'all' ? 'true' : 'false'}
      >
        {category.name[lang as keyof typeof category.name]}
      </button>
    ))}
  </div>
</div>

<style>
  .product-filter {
    background: white;
    border-radius: 16px;
    padding: 24px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
    margin-bottom: 32px;
  }
  
  .filter-title {
    font-size: 1.25rem;
    font-weight: 600;
    color: #1f2937;
    margin-bottom: 16px;
  }
  
  .filter-buttons {
    display: flex;
    flex-wrap: wrap;
    gap: 12px;
  }
  
  .filter-btn {
    padding: 12px 24px;
    border: 2px solid #e5e7eb;
    border-radius: 50px;
    background: white;
    color: #6b7280;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.3s ease;
    font-size: 0.875rem;
  }
  
  .filter-btn:hover {
    border-color: #10b981;
    color: #10b981;
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(16, 185, 129, 0.15);
  }
  
  .filter-btn[data-active="true"] {
    background: linear-gradient(135deg, #10b981, #34d399);
    border-color: #10b981;
    color: white;
    box-shadow: 0 4px 12px rgba(16, 185, 129, 0.3);
  }
  
  @media (max-width: 768px) {
    .product-filter {
      padding: 20px;
      margin-bottom: 24px;
    }
    
    .filter-buttons {
      gap: 8px;
    }
    
    .filter-btn {
      padding: 10px 20px;
      font-size: 0.8rem;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const filterButtons = document.querySelectorAll('.filter-btn');
    const productCards = document.querySelectorAll('.product-card');
    
    filterButtons.forEach(button => {
      button.addEventListener('click', function() {
        const category = this.getAttribute('data-category');
        
        // Update active button
        filterButtons.forEach(btn => btn.setAttribute('data-active', 'false'));
        this.setAttribute('data-active', 'true');
        
        // Filter products
        productCards.forEach(card => {
          const productCategory = card.getAttribute('data-category');
          
          if (category === 'all' || productCategory === category) {
            card.style.display = 'block';
            card.style.animation = 'fadeIn 0.5s ease';
          } else {
            card.style.display = 'none';
          }
        });
      });
    });
  });
</script>

